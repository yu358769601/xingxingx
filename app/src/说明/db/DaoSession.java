package com.commonrail.mft.decoder.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.commonrail.mft.decoder.db.bean.Files;
import com.commonrail.mft.decoder.db.bean.HexFileBean;
import com.commonrail.mft.decoder.db.bean.Journal;
import com.commonrail.mft.decoder.db.bean.TestData;
import com.commonrail.mft.decoder.db.bean.UserInfo;

import com.commonrail.mft.decoder.db.FilesDao;
import com.commonrail.mft.decoder.db.HexFileBeanDao;
import com.commonrail.mft.decoder.db.JournalDao;
import com.commonrail.mft.decoder.db.TestDataDao;
import com.commonrail.mft.decoder.db.UserInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig filesDaoConfig;
    private final DaoConfig hexFileBeanDaoConfig;
    private final DaoConfig journalDaoConfig;
    private final DaoConfig testDataDaoConfig;
    private final DaoConfig userInfoDaoConfig;

    private final FilesDao filesDao;
    private final HexFileBeanDao hexFileBeanDao;
    private final JournalDao journalDao;
    private final TestDataDao testDataDao;
    private final UserInfoDao userInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        filesDaoConfig = daoConfigMap.get(FilesDao.class).clone();
        filesDaoConfig.initIdentityScope(type);

        hexFileBeanDaoConfig = daoConfigMap.get(HexFileBeanDao.class).clone();
        hexFileBeanDaoConfig.initIdentityScope(type);

        journalDaoConfig = daoConfigMap.get(JournalDao.class).clone();
        journalDaoConfig.initIdentityScope(type);

        testDataDaoConfig = daoConfigMap.get(TestDataDao.class).clone();
        testDataDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        filesDao = new FilesDao(filesDaoConfig, this);
        hexFileBeanDao = new HexFileBeanDao(hexFileBeanDaoConfig, this);
        journalDao = new JournalDao(journalDaoConfig, this);
        testDataDao = new TestDataDao(testDataDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);

        registerDao(Files.class, filesDao);
        registerDao(HexFileBean.class, hexFileBeanDao);
        registerDao(Journal.class, journalDao);
        registerDao(TestData.class, testDataDao);
        registerDao(UserInfo.class, userInfoDao);
    }
    
    public void clear() {
        filesDaoConfig.getIdentityScope().clear();
        hexFileBeanDaoConfig.getIdentityScope().clear();
        journalDaoConfig.getIdentityScope().clear();
        testDataDaoConfig.getIdentityScope().clear();
        userInfoDaoConfig.getIdentityScope().clear();
    }

    public FilesDao getFilesDao() {
        return filesDao;
    }

    public HexFileBeanDao getHexFileBeanDao() {
        return hexFileBeanDao;
    }

    public JournalDao getJournalDao() {
        return journalDao;
    }

    public TestDataDao getTestDataDao() {
        return testDataDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

}
